# Generated by Django 5.0.8 on 2025-04-18 03:11

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Agency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('established_year', models.PositiveIntegerField(blank=True, help_text='Year the agency was established', null=True, validators=[django.core.validators.MinValueValidator(1800), django.core.validators.MaxValueValidator(2025)])),
                ('license_number', models.CharField(blank=True, help_text='Govt registered travel license', max_length=100)),
                ('logo', models.ImageField(blank=True, upload_to='agency-logos/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='profiles-cover/')),
                ('website', models.URLField(blank=True)),
                ('team_size', models.PositiveIntegerField(default=1)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Average rating (0.0 to 5.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('verified', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AgencyAgent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150)),
                ('experience_years', models.PositiveIntegerField(default=0)),
                ('image', models.ImageField(blank=True, upload_to='agent-profile-images/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='profiles-cover/')),
                ('languages_spoken', models.CharField(help_text='Comma-separated', max_length=255)),
                ('skills', models.TextField(help_text='Describe specialties (e.g., Tour guide, Visa expert)')),
                ('availability', models.CharField(choices=[('AVAILABLE', 'Available'), ('BOOKED', 'Booked')], default='AVAILABLE', max_length=50)),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agents', to='agency.agency')),
            ],
        ),
        migrations.CreateModel(
            name='AgencyAgentCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('file', models.FileField(upload_to='agent-certifications/')),
                ('description', models.TextField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency_agent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='agency.agencyagent')),
            ],
            options={
                'verbose_name_plural': 'Certifications',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AgencyVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_type', models.CharField(choices=[('SEDAN', 'Sedan'), ('SUV', 'SUV'), ('HYBRID', 'Hybrid'), ('OFFROAD', 'Offroad')], max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('vehicle_model', models.CharField(max_length=255)),
                ('air_conditioned', models.BooleanField(default=True)),
                ('seats', models.PositiveIntegerField(default=4, help_text='Number of seats in the vehicle', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('pricing_period', models.CharField(choices=[('PER_MINUTE', 'Per Minute'), ('PER_HOUR', 'Per Hour'), ('PER_DAY', 'Per Day')], max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='agency.agency')),
            ],
        ),
        migrations.CreateModel(
            name='AgencyVehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='service_images/')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark if this is the primary image (Thumbnail)')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Priority for display order (lower = higher)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agency_vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='agency.agencyvehicle')),
            ],
            options={
                'verbose_name': 'Vehicle Image',
                'verbose_name_plural': 'Vehicle Images',
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Hotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, help_text='Latitude of the place', max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-90.0), django.core.validators.MaxValueValidator(90.0)])),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, help_text='Longitude of the place', max_digits=9, null=True, validators=[django.core.validators.MinValueValidator(-180.0), django.core.validators.MaxValueValidator(180.0)])),
                ('description', models.TextField()),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('amenities', models.TextField(help_text='Comma-separated')),
                ('image', models.ImageField(blank=True, null=True, upload_to='hotels/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotels', to='agency.agency')),
            ],
        ),
        migrations.CreateModel(
            name='HotelRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_type', models.CharField(choices=[('SINGLE', 'Single'), ('DOUBLE', 'Double'), ('DELUXE', 'Deluxe'), ('SUITE', 'Suite')], max_length=255)),
                ('price_per_night', models.DecimalField(decimal_places=2, max_digits=10)),
                ('floor', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('beds', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='agency.hotel')),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the place', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='Detailed description of the place')),
                ('category', models.CharField(choices=[('TOURIST_ATTRACTION', 'Tourist Attraction'), ('HISTORICAL_SITE', 'Historical Site'), ('NATURAL_LANDMARK', 'Natural Landmark'), ('CULTURAL_SITE', 'Cultural Site'), ('ADVENTURE', 'Adventure Spot'), ('OTHER', 'Other')], default='TOURIST_ATTRACTION', help_text='Category of the place', max_length=50)),
                ('address', models.CharField(blank=True, help_text='Physical address of the place', max_length=255)),
                ('contact_number', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('website', models.URLField(blank=True, help_text='Official website')),
                ('operating_hours', models.TextField(blank=True, help_text='Operating hours (e.g., Mon-Fri: 9 AM - 5 PM)')),
                ('accessibility_info', models.TextField(blank=True, help_text='Accessibility details')),
                ('rating', models.DecimalField(decimal_places=2, default=0.0, help_text='Average rating (0.0 to 5.0)', max_digits=3, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(5.0)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether the place is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(blank=True, help_text='Agency managing or associated with this place', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='places', to='agency.agency')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
            },
        ),
        migrations.CreateModel(
            name='PlaceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='place-images/')),
                ('caption', models.CharField(blank=True, help_text='Caption or description', max_length=255)),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary image')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Priority for display order')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='agency.place')),
            ],
            options={
                'verbose_name': 'Place Image',
                'verbose_name_plural': 'Place Images',
                'ordering': ['priority', 'uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('rating', models.DecimalField(decimal_places=2, help_text='Rating from 1.0 to 5.0', max_digits=3, validators=[django.core.validators.MinValueValidator(1.0), django.core.validators.MaxValueValidator(5.0)])),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RoomBooking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in', models.DateTimeField()),
                ('check_out', models.DateTimeField()),
                ('booked_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('BOOKED', 'Booked'), ('CANCELLED', 'Cancelled'), ('COMPLETED', 'Completed')], default='BOOKED', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agency.hotelroom')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TravelPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('food_included', models.BooleanField(default=True)),
                ('itinerary', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agency.agency')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='travel_packages', to='agency.place')),
            ],
        ),
        migrations.CreateModel(
            name='TravelPackageGuide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_associations', to='agency.agencyagent')),
                ('travel_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guide_associations', to='agency.travelpackage')),
            ],
        ),
        migrations.AddField(
            model_name='travelpackage',
            name='guides',
            field=models.ManyToManyField(blank=True, through='agency.TravelPackageGuide', to='agency.agencyagent'),
        ),
        migrations.CreateModel(
            name='TravelPackageHotel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hotel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_associations', to='agency.hotel')),
                ('travel_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hotel_associations', to='agency.travelpackage')),
            ],
        ),
        migrations.AddField(
            model_name='travelpackage',
            name='hotels',
            field=models.ManyToManyField(blank=True, through='agency.TravelPackageHotel', to='agency.hotel'),
        ),
        migrations.CreateModel(
            name='TravelPackageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='packages/')),
                ('is_primary', models.BooleanField(default=False, help_text='Mark as primary image')),
                ('priority', models.PositiveIntegerField(default=0, help_text='Priority for display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('travel_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='agency.travelpackage')),
            ],
            options={
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='TravelPackageVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('travel_package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle_associations', to='agency.travelpackage')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package_associations', to='agency.agencyvehicle')),
            ],
        ),
        migrations.AddField(
            model_name='travelpackage',
            name='vehicles',
            field=models.ManyToManyField(blank=True, through='agency.TravelPackageVehicle', to='agency.agencyvehicle'),
        ),
        migrations.AddIndex(
            model_name='agency',
            index=models.Index(fields=['agency_name'], name='agency_agen_agency__755f30_idx'),
        ),
        migrations.AddConstraint(
            model_name='agencyagentcertification',
            constraint=models.UniqueConstraint(fields=('agency_agent', 'name'), name='unique_certification_per_agent'),
        ),
        migrations.AddIndex(
            model_name='agencyvehicle',
            index=models.Index(fields=['vehicle_type'], name='agency_agen_vehicle_bd47e7_idx'),
        ),
        migrations.AddConstraint(
            model_name='agencyvehicleimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('agency_vehicle', 'is_primary'), name='unique_primary_image_per_vehicle'),
        ),
        migrations.AddIndex(
            model_name='hotel',
            index=models.Index(fields=['name'], name='agency_hote_name_063972_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['name'], name='agency_plac_name_4ecac4_idx'),
        ),
        migrations.AddIndex(
            model_name='place',
            index=models.Index(fields=['category'], name='agency_plac_categor_c83845_idx'),
        ),
        migrations.AddConstraint(
            model_name='placeimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('place', 'is_primary'), name='unique_primary_image_per_place'),
        ),
        migrations.AddIndex(
            model_name='review',
            index=models.Index(fields=['content_type', 'object_id'], name='agency_revi_content_86fb2c_idx'),
        ),
        migrations.AddConstraint(
            model_name='review',
            constraint=models.UniqueConstraint(fields=('user', 'content_type', 'object_id'), name='unique_user_review'),
        ),
        migrations.AlterUniqueTogether(
            name='travelpackageguide',
            unique_together={('travel_package', 'guide')},
        ),
        migrations.AlterUniqueTogether(
            name='travelpackagehotel',
            unique_together={('travel_package', 'hotel')},
        ),
        migrations.AddConstraint(
            model_name='travelpackageimage',
            constraint=models.UniqueConstraint(condition=models.Q(('is_primary', True)), fields=('travel_package', 'is_primary'), name='unique_primary_image_per_package'),
        ),
        migrations.AlterUniqueTogether(
            name='travelpackagevehicle',
            unique_together={('travel_package', 'vehicle')},
        ),
        migrations.AddIndex(
            model_name='travelpackage',
            index=models.Index(fields=['start_date'], name='agency_trav_start_d_33db23_idx'),
        ),
        migrations.AddIndex(
            model_name='travelpackage',
            index=models.Index(fields=['end_date'], name='agency_trav_end_dat_2d1ea4_idx'),
        ),
    ]
